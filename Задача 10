#include <iostream>
#include <vector>
#include <queue>

using namespace std;

int main()
{
    int n, m, st_x, st_y, fn_x, fn_y;
    cin >> n >> m;

    vector<vector<int>> g(n, vector <int> (m));

    for(int i = 0; i < n; ++i){
        for (int j = 0; j < m; ++j){
            cin >> g[i][j];
        }
    }
    cin >> st_x >> st_y >> fn_x >> fn_y;
    st_x--; st_y--; fn_x--; fn_y--;
    queue<pair<int, int>> q;
    vector<vector<int>> dist(n, vector<int>(m, -1));
    dist[st_y][st_x] = 0;
    q.push({st_y, st_x});
    vector<pair<int, int>> sdvig = {{0,1},{1,0},{0,-1},{-1,0}};
    while(!q.empty()){
        int cur_x = q.front().first;
        int cur_y = q.front().second;
        q.pop();
        for(pair<int,int> i : sdvig){
            int a = cur_x + i.first;
            int b = cur_y + i.second;
            if(a < n && b < m && a >= 0 && b >= 0 && dist[a][b] == -1 && g[a][b] == 0){
                    q.push({a,b});
                    dist[a][b] = dist[cur_x][cur_y] + 1;
               }
        }
    }
    cout << dist[fn_y][fn_x];
}
