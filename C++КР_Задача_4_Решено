#include<iostream>
#include<vector>
using namespace std;

vector<vector<int>> a;
vector<int> used;
vector<int> path, ve;

void dfs(int v) {
    used[v] = 1;
    path.push_back(v);
    for (int to : a[v]) {
        if (used[to] == 0) {
            dfs(to);
        }
    }
    if (ve.size() < path.size()){
        ve = path;
    }
    path.pop_back();
}

int main() {
    int n, x, y;
    cin >> n;
    a = vector<vector<int>>(n+1);
    used = vector<int> (n+1, 0);

    for (int i = 0; i < n - 1; ++i) {
        cin >> x >> y;
        a[x].push_back(y);
        a[y].push_back(x);
    }
    dfs(1);
    used = vector<int> (n+1, 0);
    dfs(ve.back());
    cout << ve.size();
}
